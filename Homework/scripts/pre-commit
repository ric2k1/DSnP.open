#!/bin/bash
# Git pre-commit hook for LLVM coding standards
# Copy this file to .git/hooks/pre-commit and make it executable

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo "Running pre-commit code style checks..."

# Check if clang-format is installed
if ! command -v clang-format &> /dev/null; then
    echo -e "${YELLOW}Warning: clang-format not found. Skipping format check.${NC}"
    echo "Install clang-format to enable automatic code style checking."
    exit 0
fi

# Get list of staged C++ files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(cpp|h|hpp)$' | grep -E '^Homework/')

if [ -z "$STAGED_FILES" ]; then
    exit 0
fi

# Check each staged file
NEEDS_FORMATTING=0
for FILE in $STAGED_FILES; do
    # Skip files in lib directories or reference implementations
    if [[ "$FILE" == *"/lib/"* ]] || [[ "$FILE" == *"/ref/"* ]]; then
        continue
    fi
    
    # Check if file needs formatting
    if ! clang-format -style=file -dry-run -Werror "$FILE" 2>/dev/null; then
        echo -e "${RED}✗${NC} $FILE needs formatting"
        NEEDS_FORMATTING=1
    else
        echo -e "${GREEN}✓${NC} $FILE"
    fi
done

if [ $NEEDS_FORMATTING -eq 1 ]; then
    echo ""
    echo -e "${RED}Code style check failed!${NC}"
    echo "Please format your code before committing:"
    echo ""
    echo "  ./scripts/check-style.sh format <homework>"
    echo ""
    echo "Or format individual files:"
    echo "  clang-format -style=file -i <file>"
    echo ""
    echo "To bypass this check (not recommended):"
    echo "  git commit --no-verify"
    exit 1
fi

echo -e "${GREEN}Code style check passed!${NC}"
exit 0 